import math
from  math import  factorial,sqrt
from PyQt5 import QtCore, QtGui, QtWidgets
import threading


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(419, 475)
        MainWindow.setStyleSheet("QWidget {\n"
"    color:white;\n"
"    background-color:#131313;\n"
"    font-family: Rubic;\n"
"    font-size: 16pt;\n"
"    font-weight; 600;\n"
"}")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStyleSheet("QWidget {\n"
"    color:white;\n"
"    background-color:#131313;\n"
"    font-family: Times New Roman;\n"
"    font-size: 16pt;\n"
"    font-weight; 600;\n"
"}")
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit.sizePolicy().hasHeightForWidth())
        self.lineEdit.setSizePolicy(sizePolicy)
        self.lineEdit.setMaxLength(60)
        self.lineEdit.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lineEdit.setReadOnly(True)
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout.addWidget(self.lineEdit)
        self.layout_button = QtWidgets.QGridLayout()
        self.layout_button.setObjectName("layout_button")
        self.btn_sqrt = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.sqtr_it())
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_sqrt.sizePolicy().hasHeightForWidth())
        self.btn_sqrt.setSizePolicy(sizePolicy)
        self.btn_sqrt.setObjectName("btn_sqrt")
        self.layout_button.addWidget(self.btn_sqrt, 4, 0, 1, 1)
        self.btn_log = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.log10_it())
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_log.sizePolicy().hasHeightForWidth())
        self.btn_log.setSizePolicy(sizePolicy)
        self.btn_log.setObjectName("btn_log")
        self.layout_button.addWidget(self.btn_log, 3, 0, 1, 1)
        self.btn_right_bracket = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it(')'))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_right_bracket.sizePolicy().hasHeightForWidth())
        self.btn_right_bracket.setSizePolicy(sizePolicy)
        self.btn_right_bracket.setObjectName("btn_right_bracket")
        self.layout_button.addWidget(self.btn_right_bracket, 1, 2, 1, 1)
        self.btn_ln = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.log2_it())
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_ln.sizePolicy().hasHeightForWidth())
        self.btn_ln.setSizePolicy(sizePolicy)
        self.btn_ln.setObjectName("btn_ln")
        self.layout_button.addWidget(self.btn_ln, 2, 0, 1, 1)
        self.btm_factorial = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.factorial_it())
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btm_factorial.sizePolicy().hasHeightForWidth())
        self.btm_factorial.setSizePolicy(sizePolicy)
        self.btm_factorial.setObjectName("btm_factorial")
        self.layout_button.addWidget(self.btm_factorial, 1, 0, 1, 1)
        self.num0 = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it('0'))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.num0.sizePolicy().hasHeightForWidth())
        self.num0.setSizePolicy(sizePolicy)
        self.num0.setObjectName("num0")
        self.layout_button.addWidget(self.num0, 5, 1, 1, 1)
        self.btn_minus = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it('-'))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_minus.sizePolicy().hasHeightForWidth())
        self.btn_minus.setSizePolicy(sizePolicy)
        self.btn_minus.setObjectName("btn_minus")
        self.layout_button.addWidget(self.btn_minus, 4, 4, 1, 1)
        self.num1 = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it('1'))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.num1.sizePolicy().hasHeightForWidth())
        self.num1.setSizePolicy(sizePolicy)
        self.num1.setObjectName("num1")
        self.layout_button.addWidget(self.num1, 4, 1, 1, 1)
        self.btn_float = QtWidgets.QPushButton(self.centralwidget,clicked = lambda : self.dot_it('.'))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_float.sizePolicy().hasHeightForWidth())
        self.btn_float.setSizePolicy(sizePolicy)
        self.btn_float.setObjectName("btn_float")
        self.layout_button.addWidget(self.btn_float, 5, 2, 1, 1)
        self.btn_equals = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.math_it())
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_equals.sizePolicy().hasHeightForWidth())
        self.btn_equals.setSizePolicy(sizePolicy)
        self.btn_equals.setObjectName("btn_equals")
        self.layout_button.addWidget(self.btn_equals, 5, 3, 1, 1)
        self.btn_delete = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it('CE'))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_delete.sizePolicy().hasHeightForWidth())
        self.btn_delete.setSizePolicy(sizePolicy)
        self.btn_delete.setObjectName("btn_delete")
        self.layout_button.addWidget(self.btn_delete, 1, 4, 1, 1)
        self.btn_plus = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it('+'))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_plus.sizePolicy().hasHeightForWidth())
        self.btn_plus.setSizePolicy(sizePolicy)
        self.btn_plus.setObjectName("btn_plus")
        self.layout_button.addWidget(self.btn_plus, 5, 4, 1, 1)
        self.btn_multiply = QtWidgets.QPushButton(self.centralwidget,  clicked = lambda: self.press_it('*'))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_multiply.sizePolicy().hasHeightForWidth())
        self.btn_multiply.setSizePolicy(sizePolicy)
        self.btn_multiply.setObjectName("btn_multiply")
        self.layout_button.addWidget(self.btn_multiply, 3, 4, 1, 1)
        self.btn_share = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it('/'))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_share.sizePolicy().hasHeightForWidth())
        self.btn_share.setSizePolicy(sizePolicy)
        self.btn_share.setObjectName("btn_share")
        self.layout_button.addWidget(self.btn_share, 2, 4, 1, 1)
        self.num9 = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it('9'))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.num9.sizePolicy().hasHeightForWidth())
        self.num9.setSizePolicy(sizePolicy)
        self.num9.setObjectName("num9")
        self.layout_button.addWidget(self.num9, 2, 3, 1, 1)
        self.num4 = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it('4'))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.num4.sizePolicy().hasHeightForWidth())
        self.num4.setSizePolicy(sizePolicy)
        self.num4.setObjectName("num4")
        self.layout_button.addWidget(self.num4, 3, 1, 1, 1)
        self.num5 = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it('5'))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.num5.sizePolicy().hasHeightForWidth())
        self.num5.setSizePolicy(sizePolicy)
        self.num5.setObjectName("num5")
        self.layout_button.addWidget(self.num5, 3, 2, 1, 1)
        self.num8 = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it('8'))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.num8.sizePolicy().hasHeightForWidth())
        self.num8.setSizePolicy(sizePolicy)
        self.num8.setObjectName("num8")
        self.layout_button.addWidget(self.num8, 2, 2, 1, 1)
        self.num2 = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it('2'))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.num2.sizePolicy().hasHeightForWidth())
        self.num2.setSizePolicy(sizePolicy)
        self.num2.setObjectName("num2")
        self.layout_button.addWidget(self.num2, 4, 2, 1, 1)
        self.num7 = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it('7'))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.num7.sizePolicy().hasHeightForWidth())
        self.num7.setSizePolicy(sizePolicy)
        self.num7.setObjectName("num7")
        self.layout_button.addWidget(self.num7, 2, 1, 1, 1)
        self.num6 = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it('6'))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.num6.sizePolicy().hasHeightForWidth())
        self.num6.setSizePolicy(sizePolicy)
        self.num6.setObjectName("num6")
        self.layout_button.addWidget(self.num6, 3, 3, 1, 1)
        self.num3 = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it('3'))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.num3.sizePolicy().hasHeightForWidth())
        self.num3.setSizePolicy(sizePolicy)
        self.num3.setObjectName("num3")
        self.layout_button.addWidget(self.num3, 4, 3, 1, 1)
        self.btn_left_bracket = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it('('))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_left_bracket.sizePolicy().hasHeightForWidth())
        self.btn_left_bracket.setSizePolicy(sizePolicy)
        self.btn_left_bracket.setObjectName("btn_left_bracket")
        self.layout_button.addWidget(self.btn_left_bracket, 1, 1, 1, 1)
        self.btn_percent = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.log8_it())
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_percent.sizePolicy().hasHeightForWidth())
        self.btn_percent.setSizePolicy(sizePolicy)
        self.btn_percent.setObjectName("btn_percent")
        self.layout_button.addWidget(self.btn_percent, 5, 0, 1, 1)
        self.num9_3 = QtWidgets.QPushButton(self.centralwidget, clicked = lambda :self.remove_it())
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.num9_3.sizePolicy().hasHeightForWidth())
        self.num9_3.setSizePolicy(sizePolicy)
        self.num9_3.setObjectName("num9_3")
        self.layout_button.addWidget(self.num9_3, 1, 3, 1, 1)
        self.verticalLayout.addLayout(self.layout_button)
        MainWindow.setCentralWidget(self.centralwidget)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "calculator"))
        self.label.setText(_translate("MainWindow", ""))
        self.lineEdit.setText(_translate("MainWindow", "0"))
        self.btn_sqrt.setText(_translate("MainWindow", "√ "))
        self.btn_log.setText(_translate("MainWindow", "log10"))
        self.btn_right_bracket.setText(_translate("MainWindow", ")"))
        self.btn_ln.setText(_translate("MainWindow", "log2"))
        self.btm_factorial.setText(_translate("MainWindow", "x!"))
        self.num0.setText(_translate("MainWindow", "0"))
        self.btn_minus.setText(_translate("MainWindow", "-"))
        self.num1.setText(_translate("MainWindow", "1"))
        self.btn_float.setText(_translate("MainWindow", "."))
        self.btn_equals.setText(_translate("MainWindow", "="))
        self.btn_delete.setText(_translate("MainWindow", "CE"))
        self.btn_plus.setText(_translate("MainWindow", "+"))
        self.btn_multiply.setText(_translate("MainWindow", "*"))
        self.btn_share.setText(_translate("MainWindow", "/"))
        self.num9.setText(_translate("MainWindow", "9"))
        self.num4.setText(_translate("MainWindow", "4"))
        self.num5.setText(_translate("MainWindow", "5"))
        self.num8.setText(_translate("MainWindow", "8"))
        self.num2.setText(_translate("MainWindow", "2"))
        self.num7.setText(_translate("MainWindow", "7"))
        self.num6.setText(_translate("MainWindow", "6"))
        self.num3.setText(_translate("MainWindow", "3"))
        self.btn_left_bracket.setText(_translate("MainWindow", "("))
        self.btn_percent.setText(_translate("MainWindow", "log8"))
        self.num9_3.setText(_translate("MainWindow", "<-"))
    def log8_it(self):
        screen = self.lineEdit.text()
        log = math.log(int(screen),8)
        self.lineEdit.setText(str(log))
    def log2_it(self):
        screen = self.lineEdit.text()
        log = math.log2(int(screen))
        self.lineEdit.setText(str(log))
    def log10_it(self):
        screen = self.lineEdit.text()
        log = math.log10(int(screen))
        self.lineEdit.setText(str(log))
    def sqtr_it(self):
        screen = self.lineEdit.text()
        Sqrt = sqrt(int(screen))
        self.lineEdit.setText(str(Sqrt))
    def math_it(self):#знак равенства
        screen = self.lineEdit.text()
        ansewr = eval(screen)
        self.lineEdit.setText(str(ansewr))
    def remove_it(self):#стереть
        screen = self.lineEdit.text()
        try:
            screen = screen[:-1]
            self.lineEdit.setText(screen)
        except:
            self.lineEdit.setText('Ошибка')#ошибка
    def  factorial_it(self):
        screen = self.lineEdit.text()
        n = (factorial(int(screen)))
        self.lineEdit.setText(str(n))
    def factor(self):
        t = threading.Thread(target=self.factorial_it(self))
        t.start()
    def dot_it(self,screen):#десятичная дробь
        screen = self.lineEdit.text()
        if "." in screen:
            pass
        else:
            self.lineEdit.setText(f'{screen}.')
    def press_it(self,pressed):
        if pressed == 'CE':
             self.lineEdit.setText('0')
        else:
             if self.lineEdit.text() == '0':#если в начале ноль удаление его
                     self.lineEdit.setText('')
                     self.label.setText('')
             self.lineEdit.setText(f'{self.lineEdit.text()}{pressed}')#набор n-ого чилса
             self.label.setText(f'{self.lineEdit.text()}')


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
